programa ADP  
areas 
  zonaC : areaC(15,2,20,3) 
  zonaPC : areaPC(1,1,99,99) 
robots
  robot organizador
  variables
    { Estado de los semÃ¡foros de los robots }
    ID: numero
    SL1: boolean
    SL2: boolean
    SE1: boolean
    { Resultados para los diferentes robots }
    RL1: boolean
    RL2: boolean
    RE1: boolean
    op: numero { Numero de operacion a realizar }
  comenzar
    recibirMensaje(ID,L1)
    { Robot Lector1 }
    Informar(ID)
    si ( ID = 1 )
      recibirMensaje(op,L1)
      Informar(V)
      si ( op = 7 ) { Pedir permiso }
        RL1 := SE1
        mientras (RL1 = V )
          RL1 := SE1
        enviarMensaje(RL1,L1) { Envia el estado de los robots }
      recibirMensaje(op,L1)
      Informar(op)
      si ( op = 8 ) { Entrar }
        SL1 := V
        Informar(SL1)
      recibirMensaje(op,L1)
      Informar(op)
      si ( op = 9 ) { Salir }
        SL1 := F
    recibirMensaje(ID,L2)
    { Robot Lector2 }
    Informar(ID)
    si ( ID = 2 )
      recibirMensaje(op,L2)
      Informar(op)
      si ( op = 7 ) { Pedir permiso }
        RL2 := SE1
        mientras (RL2 = V )
          RL2 := SE1
        enviarMensaje(RL2,L2) { Envia el estado de los robots }
      recibirMensaje(op,L2)
      Informar(op)
      si ( op = 8 ) { Entrar }
        SL2 := V
      recibirMensaje(op,L2)
      Informar(op)
      si ( op = 9 ) { Salir }
        SL2 := F
	  recibirMensaje(ID,E1) 
  	Informar(ID) 
    si ( ID = 10 )
      recibirMensaje(op,E1)
      Informar(op)
      si ( op = 7 ) { Pedir permiso }
{      	Informar(SL1)}
        RE1 := ( SL1 | SL2 )
        Informar(34)
        mientras (RE1 = V )
          RE1 := ( SL1 | SL2 )
        enviarMensaje(RE1,E1) { Envia el estado de los robots }
      recibirMensaje(op,E1)
      Informar(op)
      si ( op = 8 ) { Entrar }
        SE1 := V
      recibirMensaje(op,E1)
      Informar(op)
      si ( op = 9 ) { Salir }
        SE1 := F
  fin
  robot lector1
  variables
    permisoL1: boolean
    valor: numero
  comenzar
    {-}    
    { PIDO PERMISO PARA ENTRAR }
    {-}     
    enviarMensaje(1,O) { envia identificador propio }
    enviarMensaje(7,O) { envia la operacion para pedir permiso }
    recibirMensaje(permisoL1,O)
    {-}      
    { concedido el permiso, va a recolectar a la esquina }
    {-}
    si (permisoL1 = F )
      repetir 3
        derecha
      repetir 35
        mover
      repetir 3
        derecha
      repetir 48
        mover
      {-}    
      { ---- RECOLECTANDO :) ---- }
      {-}    
      enviarMensaje(8,O) { Envio seÃ±al para entrar }
      si HayFlorEnLaEsquina
        tomarFlor
         {-}    
      {-}      
      { Vuelvo al lugar de partida }
      {-}    
      repetir 3
        derecha
      repetir 35
        mover
      repetir 3
        derecha
      repetir 48
        mover
      { Avisa al organizador para salida }
      {-}    
      enviarMensaje(9,O)
  fin
	robot lector2
  variables
    permisoL2: boolean
    valor: numero
  comenzar
    {-}    
    { PIDO PERMISO PARA ENTRAR }
    {-}     
    enviarMensaje(2,O) { envia identificador propio }
    enviarMensaje(7,O) { envia la operacion para pedir permiso }
    recibirMensaje(permisoL2,O)
    {-}      
    { concedido el permiso, va a recolectar a la esquina }
    {-}
    si (permisoL2 = F )
      repetir 3
        derecha
      repetir 35
        mover
      repetir 3
        derecha
      repetir 49
        mover
      {-}    
      { ---- RECOLECTANDO :) ---- }
      {-}    
      enviarMensaje(8,O) { Envio seÃ±al para entrar }
      si HayFlorEnLaEsquina
        tomarFlor
         {-}    
      {-}      
      { Vuelvo al lugar de partida }
      {-}    
      repetir 3
        derecha
      repetir 35
        mover
      repetir 3
        derecha
      repetir 49
        mover
      { Avisa al organizador para salida }
      {-}    
      enviarMensaje(9,O)
  fin
  {-}
  robot escritor1
  variables
    permisoE1: boolean
    plantadas:numero
  comenzar
    plantadas := 0
    {-}    
    { PIDO PERMISO PARA ENTRAR }
    {-}     
    enviarMensaje(10,O) { envia identificador propio }
    enviarMensaje(7,O) { envia la operacion para pedir permiso }
    recibirMensaje(permisoE1,O)
    {-}            
    { concedido el permiso, va a sembrar a la esquina }
    {-}
    si ( permisoE1 = F )
      repetir 3
        derecha
      repetir 45
        mover
      repetir 3
        derecha
      repetir 58
        mover
      repetir 3
        derecha
      {-}      
      { empieza el sembrado :) }
      {-}
      enviarMensaje(8,O) { Envio seÃ±al para entrar }
      mientras plantadas < 5
        bloquearEsquina(PosAv,PosCa)
        depositarFlor
        liberarEsquina(PosAv,PosCa)
        plantadas := plantadas + 1
        mover
        {-}
      { Vuelvo al lugar de partida }    
      {-}
      repetir 40
        mover
      repetir 3
        derecha
      repetir 58
        mover
      { Avisa al organizador para salida }
      {-}
      enviarMensaje(9,O)
      {-}    
  fin
variables  
  E1: escritor1
  L1: lector1
  L2: lector2
  O: organizador
comenzar  
  AsignarArea(E1,zonaPC)
  AsignarArea(O,zonaPC)
  AsignarArea(L1,zonaPC)
  AsignarArea(L2,zonaPC)
  iniciar(O, 90, 90)
  iniciar(E1, 60, 60)
  iniciar(L1, 50, 50)
  iniciar(L2, 51, 51)  
fin
